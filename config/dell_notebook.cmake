# Dell Latitude - Notebook (Ubuntu 20.04.4 LTS, 64-bit)
if ( NOT BUILD_TYPE )
   message( WARNING "Setting CMAKE_BUILD_TYPE to default value." )
   set(BUILD_TYPE {PARALLEL})
endif()
if ( NOT HYBRID ) 
   set(HYBRID FALSE) 
else()
   message(WARNING "Compiling for hybrid openMP/MPI usage") 
endif() 
if ( NOT PROFILE ) 
   set(PROFILE FALSE) 
endif() 
if ( ${PROFILE} STREQUAL "TRUE" )  
   set(USER_profile_FLAGS "-g")
endif() 

# Compiler for parallel build
if ( ${BUILD_TYPE} STREQUAL "PARALLEL" )
   set(ENV{FC} mpif90)
   set(CMAKE_Fortran_COMPILER mpif90)
   set(USER_Fortran_FLAGS "-cpp -ffree-form -ffree-line-length-none -fno-automatic")
   set(USER_Fortran_FLAGS_RELEASE "-ffpe-summary=none -O3 -fconvert=little-endian -O3 -ffast-math -ffinite-math-only -mtune=native -march=native -fprefetch-loop-arrays") # -fallow-argument-mismatch
   add_definitions(-DUSE_FFTW -DUSE_MPI -DUSE_ALLTOALL -DUSE_MPI_IO) # -DIBM_DEBUG)
   set(CMAKE_BUILD_TYPE RELEASE)
# Compiler for serial build
elseif( ${BUILD_TYPE} STREQUAL "SERIAL" ) 
   set(ENV{FC} gfortran-10)
   set(CMAKE_Fortran_COMPILER gfortran-10)
   set(USER_Fortran_FLAGS "-cpp -std=legacy -ffree-form -ffree-line-length-none -fno-automatic -fallow-argument-mismatch")
   add_definitions(-DUSE_FFTW) # -DIBM_DEBUG)
   set(USER_Fortran_FLAGS_RELEASE "-fconvert=little-endian -ffpe-summary=none -O3 -ffast-math -ffinite-math-only -mtune=native -march=native -funroll-loops")
   set(CMAKE_BUILD_TYPE RELEASE)
# Compiler for debug build
elseif( ${BUILD_TYPE} STREQUAL "DEBUG" )
   set(USER_Fortran_FLAGS_DEBUG "-Og -ggdb3 -cpp -Wall -fbacktrace -ffree-line-length-none -Wno-argument-mismatch  -Wno-unknown-pragmas -ffpe-trap=invalid,zero,overflow")
   add_definitions(-D_DEBUG -DUSE_FFTW -DIBM_DEBUG)
   set(CMAKE_BUILD_TYPE DEBUG)
endif()

set(GNU_SED "gsed")

# Libraries - FFTW
set(FFTW_INCLUDE_DIR   "/usr/local/include")
set(FFTW_LIB           "/usr/lib/x86_64-linux-gnu/libfftw3.a")
set(INCLUDE_DIRS ${FFTW_INCLUDE_DIR})
set(LIBS ${FFTW_LIB})
# Libraries - NETCDF
add_definitions(-DUSE_NETCDF)
set(NCDF_INCLUDE_DIR   "/usr/include")
set(NCDF_LIB           "-L/usr/lib/x86_64-linux-gnu -lnetcdff -lnetcdf")
set(INCLUDE_DIRS ${INCLUDE_DIRs} ${NCDF_INCLUDE_DIR})
set(LIBS ${LIBS} ${NCDF_LIB})